{% set ossec_conf_agent = salt['pillar.get']('ossec_conf_agent') %}
<!--
  Wazuh - Agent - Default configuration
  More info at: https://documentation.wazuh.com
  Mailing list: https://groups.google.com/forum/#!forum/wazuh
-->

<ossec_config>
  <client>
    <server>
      <address>{{ salt['pillar.get']('ossec_conf_agent:manager_ip') }}</address>
      <port>{{ salt['pillar.get']('ossec_conf_agent:manager_port') }}</port>
      <protocol>{{ salt['pillar.get']('ossec_conf_agent:protocol') }}</protocol>
    </server>
    {% if salt['pillar.get']('ossec_profile') is defined %}<config-profile>{{ salt['pillar.get']('ossec_conf_agent:ossec_profile') }}</config-profile>{% endif %}
    <crypto_method>aes</crypto_method>
    <auto_restart>yes</auto_restart>
    <time-reconnect>60</time-reconnect>
    <notify_time>10</notify_time>
  </client>

  <client_buffer>
    <!-- Agent buffer options -->
    <disabled>no</disabled>
    <queue_size>5000</queue_size>
    <events_per_second>500</events_per_second>
  </client_buffer>

  <!-- Policy monitoring -->
  <rootcheck>
    <disabled>no</disabled>
    <check_files>yes</check_files>
    <check_trojans>yes</check_trojans>
    <check_dev>yes</check_dev>
    <check_sys>yes</check_sys>
    <check_pids>yes</check_pids>
    <check_ports>yes</check_ports>
    <check_if>yes</check_if>

    <!-- Frequency that rootcheck is executed - every 12 hours -->
    <frequency>43200</frequency>

    <rootkit_files>/var/ossec/etc/shared/rootkit_files.txt</rootkit_files>
    <rootkit_trojans>/var/ossec/etc/shared/rootkit_trojans.txt</rootkit_trojans>

    <skip_nfs>yes</skip_nfs>
  </rootcheck>

  {% if grains['os'] == 'Ubuntu'  and grains['oscodename'] == 'xenial' %}
  <wodle name="open-scap">
    <disabled>yes</disabled>
    <timeout>1800</timeout>
    <interval>1d</interval>
    <scan-on-start>yes</scan-on-start>

    <content type="xccdf" path="ssg-ubuntu-1604-ds.xml">
      <profile>xccdf_org.ssgproject.content_profile_common</profile>
    </content>
  </wodle>
  {% elif grains['os'] == 'CentOS' %}
  <wodle name="open-scap">
    <disabled>yes</disabled>
    <timeout>1800</timeout>
    <interval>1d</interval>
    <scan-on-start>yes</scan-on-start>

    {% if grains['osrelease_info'][0] == 7 %}
    <content type="xccdf" path="ssg-centos-7-ds.xml">
    {% elif grains['osrelease_info'][0] == 6 %}
    <content type="xccdf" path="ssg-centos-6-ds.xml">
    {% endif %}
      <profile>xccdf_org.ssgproject.content_profile_pci-dss</profile>
      <profile>xccdf_org.ssgproject.content_profile_common</profile>
    </content>
  </wodle>
  {% elif grains['os'] == 'RedHat' %}
      <wodle name="open-scap">
        <disabled>yes</disabled>
    <timeout>1800</timeout>
    <interval>1d</interval>
    <scan-on-start>yes</scan-on-start>

    {% if grains['osrelease_info'][0] == 7 %}
    <content type="xccdf" path="ssg-rhel-7-ds.xml">
    {% elif grains['osrelease_info'][0] == 6 %}
    <content type="xccdf" path="ssg-rhel-7-ds.xml">
    {% endif %}
      <profile>xccdf_org.ssgproject.content_profile_pci-dss</profile>
      <profile>xccdf_org.ssgproject.content_profile_common</profile>
    </content>
  </wodle>
  {% endif %}

  {% if salt['pillar.get']('cis_cat') is defined %}

  <wodle name="cis-cat">
    <disabled>no</disabled>
    <timeout>1800</timeout>
    <interval>1d</interval>
    <scan-on-start>yes</scan-on-start>

    <java_path>wodles/java</java_path>
    <ciscat_path>wodles/ciscat</ciscat_path>
  </wodle>
  {% endif %}

<!-- File integrity monitoring -->
<syscheck>
  <!-- Frequency that syscheck is executed -- default every 20 hours -->
  <frequency>{{ ossec_conf_agent.syscheck.syscheck_frequency_check }}</frequency>

  <scan_on_start>yes</scan_on_start>

  <!-- Generate alert when new file detected -->
  <alert_new_files>yes</alert_new_files>

  <!-- Don't ignore files that change more than 3 times -->
  <auto_ignore>no</auto_ignore>

<!-- Directories to check  (perform all possible verifications) -->
  {% for directory in ossec_conf_agent.syscheck.directories %}
    <directories check_all="{{ directory.check_all }}">{{ directory.dirs }}</directories>
  {% endfor %}
    <!-- Files/directories to ignore -->
     <!-- Files/directories to ignore -->
    <ignore>/etc/mtab</ignore>
    <ignore>/etc/hosts.deny</ignore>
    <ignore>/etc/mail/statistics</ignore>
    <ignore>/etc/random-seed</ignore>
    <ignore>/etc/random.seed</ignore>
    <ignore>/etc/adjtime</ignore>
    <ignore>/etc/httpd/logs</ignore>
    <ignore>/etc/utmpx</ignore>
    <ignore>/etc/wtmpx</ignore>
    <ignore>/etc/cups/certs</ignore>
    <ignore>/etc/dumpdates</ignore>
    <ignore>/etc/svc/volatile</ignore>
    <ignore>/sys/kernel/security</ignore>
    <ignore>/sys/kernel/debug</ignore>
    <ignore>/dev/core</ignore>

    {% for ignore_file in ossec_conf_agent.syscheck.ignore_files %}
    <ignore>{{ ignore_file }}</ignore>
    {% endfor %}
    
    <!-- File types to ignore -->
    <ignore type="sregex">^/proc</ignore>
    <ignore type="sregex">.log$|.swp$</ignore>

    <!-- Check the file, but never compute the diff -->
    <nodiff>/etc/ssl/private.key</nodiff>

    <skip_nfs>yes</skip_nfs>
  </syscheck>

  <sca>
    <enabled>yes</enabled>
    <scan_on_start>yes</scan_on_start>
    <interval>12h</interval>
    <skip_nfs>yes</skip_nfs>
  </sca>

  <!-- Log analysis -->
  <localfile>
    <log_format>command</log_format>
    <command>df -P</command>
    <frequency>360</frequency>
  </localfile>

  <localfile>
    <log_format>full_command</log_format>
    <command>netstat -tulpn | sed 's/\([[:alnum:]]\+\)\ \+[[:digit:]]\+\ \+[[:digit:]]\+\ \+\(.*\):\([[:digit:]]*\)\ \+\([0-9\.\:\*]\+\).\+\ \([[:digit:]]*\/[[:alnum:]\-]*\).*/\1 \2 == \3 == \4 \5/' | sort -k 4 -g | sed 's/ == \(.*\) ==/:\1/' | sed 1,2d</command>
    <alias>netstat listening ports</alias>
    <frequency>360</frequency>
  </localfile>

  <localfile>
    <log_format>full_command</log_format>
    <command>last -n 20</command>
    <frequency>360</frequency>
  </localfile>

  <!-- Active response -->
  <active-response>
    <disabled>no</disabled>
    <ca_store>/var/ossec/etc/wpk_root.pem</ca_store>
    <ca_verification>yes</ca_verification>
  </active-response>

<!-- Files to monitor (localfiles) -->

{% if salt['pillar.get']('localfiles_agent') is defined %}
  {% for localfile in ossec_conf_agent.localfiles_agent %}
  <localfile>
     <log_format>{{ localfile.format }}</log_format>
     {% if localfile.location is defined %}<location>{{ localfile.location }}</location>{% endif %}
     {% if localfile.command is defined %}<command>{{ localfile.command }}</command>{% endif %}
     {% if localfile.frequency is defined %}<frequency>{{ localfile.frequency }}</frequency>{% endif %}
  </localfile>
  {% endfor %}
{% endif %}

</ossec_config>
<ossec_config>
  <localfile>
    <log_format>audit</log_format>
    <location>/var/log/audit/audit.log</location>
  </localfile>

  <localfile>
    <log_format>syslog</log_format>
    <location>/var/ossec/logs/active-responses.log</location>
  </localfile>

  <localfile>
    <log_format>syslog</log_format>
    <location>/var/log/messages</location>
  </localfile>

  <localfile>
    <log_format>syslog</log_format>
    <location>/var/log/secure</location>
  </localfile>

  <localfile>
    <log_format>syslog</log_format>
    <location>/var/log/maillog</location>
  </localfile>

</ossec_config>